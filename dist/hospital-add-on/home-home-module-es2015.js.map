{"version":3,"sources":["./src/app/home/components/filter/list.component.ts","./src/app/home/components/group-filter/group-filter.component.ts","./src/app/home/components/list/list.component.ts","./src/app/home/components/list/list.component.html","./src/app/home/container/home-container/home-container.component.ts","./src/app/home/container/home-container/home-container.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/store/actions/home.action.ts","./src/app/home/store/effects/home.effects.ts","./src/app/home/store/reducers/home.reducer.ts","./src/app/home/store/reducers/index.ts"],"names":[],"mappings":"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","file":"home-home-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport * as fromHomeActions from \"../../store/actions/home.action\";\n\n@Component({\n  selector: 'app-filter',\n  template: `\n    <mat-form-field class=\"w100\">\n      <mat-label>Фільтр по колонці Title</mat-label>\n      <input #filter matInput autocomplete=\"off\" (keyup)=\"applyFilter($event.target.value)\">\n      <button \n        *ngIf=\"filter.value !== ''\" \n        mat-icon-button \n        matSuffix\n        (click)=\"filter.value = ''; applyFilter('')\"\n       >\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n  `,\n  styles: [``]\n})\nexport class FilterComponent {\n\n  constructor(private store: Store<any>) { }\n\n  applyFilter(text) {\n    this.store.dispatch(fromHomeActions.setTextFilter({ text: text }));\n  }\n\n}\n","import { Component } from '@angular/core';\n\n// Store\nimport { Store } from '@ngrx/store';\nimport * as fromHome from \"../../store/reducers\";\nimport * as fromHomeActions from \"../../store/actions/home.action\";\n\n@Component({\n  selector: 'app-group-filter',\n  template: `\n    <mat-chip-list multiple [selectable]=\"true\">\n      <mat-chip \n        *ngFor=\"let group of selectedGroups$ | async\"\n        selectable=\"true\"\n        [selected]=\"group.selected\"\n        (click)=\"toggleGroup(group)\"\n      > {{ group.title}} </mat-chip>\n    </mat-chip-list>\n  `,\n  styles: [`\n    mat-chip {\n      cursor: pointer;\n    }\n  `]\n})\nexport class GroupFilterComponent {\n\n  selectedGroups$ = this.store.select(fromHome.getSelectionGroups); \n\n  constructor(private store: Store<any>) { }\n\n  toggleGroup(event) {\n    this.store.dispatch(fromHomeActions.toggleGroup({ group: event }));\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { Clipboard } from \"@angular/cdk/clipboard\"\n\nimport { MatSnackBar, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\nimport { Store } from '@ngrx/store';\nimport * as fromHome from \"../../store/reducers\"\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent {\n\n  tableData$ = this.store.select(fromHome.getDataForTable);\n  displayedColumns: string[] = ['id', 'title'];\n\n  constructor(\n    private store: Store<any>,\n    private clipboard: Clipboard,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  isGroup(index, item): boolean{\n    return item.isGroup;\n  }\n\n  isSubgroup(index, item): boolean{\n    return item.isSubgroup;\n  } \n\n  copyContent(text){\n    this.clipboard.copy(text);\n    this.openSnackBar(text);\n  }\n\n  openSnackBar(message: string,) {\n    this._snackBar.openFromComponent(CopySnackBarComponent, {\n      duration: 1500,\n      data: {\n        message: message\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'snack-bar',\n  template: `\n    <div class=\"snack-bar-wr\">\n      <span class=\"snack-text\">{{ data.message }}</span>\n      <span class=\"snack-bar-btn\" (click)=\"onClick()\">Закрити</span>\n    </div>\n  `,\n  styles: [`\n    .snack-bar-wr {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .snack-text {\n      color: white;\n    }\n        \n    .snack-bar-btn {\n      margin-left: 7px;\n      color: white;\n      cursor: pointer;\n    }\n  `],\n})\nexport class CopySnackBarComponent {\n\n  constructor(\n    private snackBar: MatSnackBar,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) { }\n\n  onClick() {\n    this.snackBar.dismiss();\n  }\n  \n}\n","<ng-container *ngIf=\"(tableData$ | async).length; else emptyList\">\n    <table mat-table [dataSource]=\"tableData$ | async\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Code </th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"copyContent(element.id)\"> {{element.id}} </td>\n        </ng-container>\n    \n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef>Title</th>\n            <td mat-cell *matCellDef=\"let element\" (click)=\"copyContent(element.id)\"> {{element.title}} </td>\n        </ng-container>\n      \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    \n        <!-- Group header -->\n        <ng-container matColumnDef=\"groupHeader\">\n            <td colspan=\"777\" mat-cell *matCellDef=\"let groupBy\" style=\"background: rgb(248, 248, 248);\" ><strong>{{ groupBy.groupTitle }}</strong></td>\n        </ng-container>\n    \n        <tr mat-row *matRowDef=\"let row; columns: ['groupHeader']; when: isGroup\"> </tr>\n    \n        <!-- SubGroup header -->\n        <ng-container matColumnDef=\"subGroup\">\n            <td colspan=\"999\" mat-cell *matCellDef=\"let subGroup\" style=\"background: rgb(251, 251, 251);\"><strong style=\"color: gray; margin-left: 7px;\">{{ subGroup.subgroupTitle }}</strong></td>\n        </ng-container>\n    \n        <tr mat-row *matRowDef=\"let row; columns: ['subGroup']; when: isSubgroup\"> </tr>\n    \n    </table>\n</ng-container>\n\n<ng-template #emptyList>\n    <div class=\"empty-list\">\n        <strong>Список пустий!</strong>\n    </div>\n</ng-template>\n\n\n","import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as fromHome from \"../../store/reducers\";\nimport * as fromHomeActions from \"../../store/actions/home.action\";\n\n@Component({\n  selector: 'app-home-container',\n  templateUrl: './home-container.component.html',\n  styleUrls: ['./home-container.component.scss']\n})\nexport class HomeContainerComponent {\n\n  \n  data$ = this.store.select(fromHome.getData);\n  error$ = this.store.select(fromHome.getError);\n  \n  constructor(private store: Store<any>) {\n    this.store.dispatch(fromHomeActions.getData());\n  }\n\n}","<div class=\"container\" *ngIf=\"data$ | async; else error\">\n    <mat-card class=\"card\">\n        <div>\n            <mat-card-content>\n                <app-filter></app-filter>\n                <app-group-filter></app-group-filter>\n            </mat-card-content>\n        </div>\n        <div class=\"content\">\n            <app-list></app-list>\n        </div>\n    </mat-card>\n</div>\n\n<ng-template #error>\n    <div *ngIf=\"error$ | async as err\" class=\"error\">\n        <div><strong>Сталася помилка!</strong></div>\n        <div>{{err.message}}</div>\n        <div *ngIf=\"err?.error?.error?.message\">{{err.error.error.message}}</div>\n    </div>\n</ng-template>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeContainerComponent } from './container/home-container/home-container.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeContainerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n// Components\nimport { ListComponent } from './components/list/list.component';\nimport { HomeContainerComponent } from './container/home-container/home-container.component';\nimport { FilterComponent } from './components/filter/list.component';\nimport { GroupFilterComponent } from './components/group-filter/group-filter.component';\n\n// Store\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HomeEffects } from './store/effects/home.effects';\n\nimport * as fromHome from \"./store/reducers/home.reducer\"\n\n// Modules\nimport { MaterialModule } from '../modules/material.module';\nimport { FormsModule } from '@angular/forms';\n\n\nconst COMPONENTS = [\n  HomeContainerComponent,\n  ListComponent,\n  FilterComponent,\n  GroupFilterComponent\n]\n\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,               \n    HomeRoutingModule,\n    MaterialModule,\n    StoreModule.forFeature(fromHome.HOME_FEATURE_KEY, fromHome.reducer),\n    EffectsModule.forFeature([HomeEffects]),\n  ]\n})\nexport class HomeModule { }\n","import { createAction, props } from '@ngrx/store';\n\n// Model\nimport { Group } from '../../../models/store-data.model';\n\nexport const getData = createAction(\n    \"[Home Api] Get Data \"\n);\n\nexport const getDataSuccess = createAction(\n    \"[Home Api] Get Data Success\",\n    props<{ groups: Group[] }>()\n);\n\nexport const getDataFailure = createAction(\n    \"[Home Api] Get Data Failure\",\n    props<{ error: any }>()\n);\n\nexport const toggleGroup = createAction(\n    \"[Home] Toggle Group\",\n    props<{ group: any }>()\n);\n\nexport const setTextFilter = createAction(\n    \"[Home] Set Text Filter\",\n    props<{ text: string }>()\n);\n\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { of, Observable } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\n\nimport { Action } from '@ngrx/store';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as dataActions from \"../actions/home.action\";\n\nimport { DataService } from '../../../services/data.service';\n\nimport { StoreData } from 'src/app/models/store-data.model';\n \n@Injectable()\nexport class HomeEffects {\n \n  getData$: Observable<Action> = createEffect(() => this.actions$.pipe(\n    ofType(dataActions.getData),\n    switchMap(() => this.dataService.getDataFromFile()\n      .pipe(\n        map((storeData: StoreData) => {\n            return dataActions.getDataSuccess({ groups: storeData.group })\n        }),\n        catchError((error: HttpErrorResponse) => {\n            return of(dataActions.getDataFailure({ error: error }))\n        })\n      )\n    ))\n  );\n \n  constructor(\n    private actions$: Actions,\n    private dataService: DataService\n  ) {}\n}","import { Action, createReducer, on } from '@ngrx/store';\nimport * as homeAction from '../actions/home.action';\n\nimport { Group, SelectionGroup } from '../../../models/store-data.model';\n\nexport const HOME_FEATURE_KEY = \"home\";\n\nexport interface HomeState {\n    data: Group[],\n    groups: any[];\n    error: any;\n    filter: string;\n    selectedGroups: SelectionGroup[];\n}\n\nexport const initialState: HomeState = {\n    data: [],\n    groups: [],\n    error: null,\n    filter: '',\n    selectedGroups: []\n};\n\nconst dataReducer = createReducer(\n    initialState,\n    on(homeAction.getData, state => initialState),\n    on(homeAction.getDataSuccess, (state, { groups, type }) => ({\n        ...state,\n        data: groups,\n        groups: groups.map(g => ({ id: g.id, title: g.title })),\n        error: null,\n        selectedGroups: groups.map(group => ({ id: group.id, title: group.title, selected: true }))\n    })),\n    on(homeAction.getDataFailure, (state, { error }) => ({ ...state, data: undefined, error: error })),\n    on(homeAction.toggleGroup, (state, { group }) => {\n        const SG = JSON.parse(JSON.stringify(state.selectedGroups));\n        let el = SG[SG.findIndex(g => g.id === group.id)]       \n        el.selected = !el.selected;\n        return { ...state, selectedGroups: SG }\n    }),\n    on(homeAction.setTextFilter, (state, { text }) => ({ ...state, filter: text })),\n);\n  \nexport function reducer(state: HomeState, action: Action) {\n    return dataReducer(state, action);\n}\n\nexport const getData = (state) => state.data;\nexport const getGroups = (state) => state.groups;\nexport const getError = (state) => state.error;\nexport const getFilter = (state) => state.filter;\nexport const getSelectedGroups = (state) => state.selectedGroups;\n","import { createSelector } from \"@ngrx/store\";\n\nimport * as fromHome from \"./home.reducer\";\n\n// Models\nimport { Group } from '../../../models/store-data.model';\nimport { HOME_FEATURE_KEY } from './home.reducer';\n\nimport { State } from 'src/app/store/reducers';\n\nexport interface FeatureState {\n  [HOME_FEATURE_KEY]: fromHome.HomeState;\n}\n\nexport const selectHomeFeature = (state: State) => state[HOME_FEATURE_KEY];\n\nexport const getHomeState = createSelector(\n    selectHomeFeature,\n    (state: FeatureState) => state\n);\n\nexport const getError = createSelector(\n    getHomeState,\n    data => fromHome.getError(data)\n)\n\nexport const getData = createSelector(\n    getHomeState,\n    data => fromHome.getData(data)\n)\n\nexport const getGroups = createSelector(\n    getHomeState,\n    data => fromHome.getGroups(data)\n)\n\nexport const getFilter = createSelector(\n    getHomeState,\n    data => fromHome.getFilter(data)\n)\n\nexport const getSelectionGroups = createSelector(\n    getHomeState,\n    data => fromHome.getSelectedGroups(data)\n)\n\nexport const getSelectedGroups = createSelector(\n    getSelectionGroups,\n    data => data.filter(d => d.selected)\n)\n\nexport const getDataFilteredByGroups = createSelector(\n    getData,\n    getSelectedGroups,\n    (data, getSelectedGroups: any) => data ? data.filter((group: Group) => getSelectedGroups.some(selectedGroup => selectedGroup.id === group.id)) : data\n)\n\nexport const getDataFilteredByTextField = createSelector(\n    getDataFilteredByGroups,\n    getFilter,\n    (data, filterStr: string) => {\n        if (filterStr && data) {\n            return JSON.parse(JSON.stringify(data)).map(group => {\n                group.subGroup = group.subGroup.map(subgroup => ({\n                    ...subgroup,\n                    elements: subgroup.elements.filter(v => v.title.trim().toLowerCase().indexOf(filterStr) !== -1)\n                })).filter(sg => sg.elements.length)\n                return group\n            }).filter(g => g.subGroup.length)\n        }\n        return data;\n    }\n)\n\nexport const getDataForTable = createSelector(\n    getDataFilteredByTextField,\n    (data): Group[] => {\n        if (data) {\n            const tableArr = [];\n            \n            data.forEach(group => {\n                tableArr.push({\n                    groupTitle: group.title,\n                    isGroup: true\n                })\n                \n                group.subGroup.forEach(subgroup => {\n                    tableArr.push({\n                        subgroupTitle: subgroup.title,\n                        isSubgroup: true\n                    })\n\n                    subgroup.elements.forEach(el => {\n                        tableArr.push(el)\n                    })\n                })\n            })\n        \n            return tableArr;\n        }\n\n        return [];\n    }\n)\n\n"],"sourceRoot":"webpack:///"}